{"version":3,"sources":["components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","images/image.png","App.js","index.js","App.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","App","state","fetchedData","setState","this","image","src","coronaImage","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f4f655ec.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1Yj-k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__1EGdR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2tmSL\",\"card\":\"Cards_card__3huwN\",\"infected\":\"Cards_infected__3_75L\",\"recovered\":\"Cards_recovered__2vhhM\",\"deaths\":\"Cards_deaths__s1h5J\"};","import React from 'react' ;\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\nimport styles from './Cards.module.css';\r\n\r\nconst Cards=({data: { confirmed, recovered, deaths, lastUpdate }})=>{\r\n    if(!confirmed){\r\n        return 'loading...';\r\n    }\r\n    return (\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify='center'>\r\n                <Grid item component = {Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={confirmed.value} duration={2.5} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\"> { new Date(lastUpdate).toDateString() } </Typography>\r\n                        <Typography variant=\"body2\">Number of active cases of Covid-19</Typography>\r\n                    </CardContent>\r\n                </Grid>    \r\n\r\n                <Grid item component = {Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={recovered.value} duration={2.5} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\"> { new Date(lastUpdate).toDateString() } </Typography>\r\n                        <Typography variant=\"body2\">Number of recoveries from Covid-19</Typography>\r\n                    </CardContent>\r\n                </Grid>    \r\n\r\n                <Grid item component = {Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={deaths.value} duration={2.5} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\"> { new Date(lastUpdate).toDateString() } </Typography>\r\n                        <Typography variant=\"body2\">Number of deaths caused by Covid-19</Typography>\r\n                    </CardContent>\r\n                </Grid>    \r\n\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\nexport default Cards;","import axios from 'axios'\r\n\r\nconst url='https://covid19.mathdro.id/api'\r\n\r\nexport const fetchData= async(country)=>{\r\n    let changeableUrl = url;\r\n\r\n    if(country){\r\n        changeableUrl= `${url}/countries/${country}`;\r\n    }\r\n\r\n    try {\r\n        const {data : {confirmed, recovered, deaths, lastUpdate}} = await axios.get(changeableUrl);\r\n\r\n        return {confirmed, recovered, deaths, lastUpdate}; \r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchDailyData= async() =>{\r\n\r\n\r\n\r\n    try {\r\n        const {data} = await axios.get(`${url}/daily`);\r\n        \r\n        const modifiedData = data.map((dailyData)=>({\r\n          confirmed:dailyData.confirmed.total,\r\n          deaths:dailyData.deaths.total,\r\n          date:dailyData.reportDate\r\n        }));\r\n\r\n        return modifiedData;\r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\n\r\nexport const fetchCountries= async()=>{\r\n    try {\r\n        const  { data:{countries} }= await axios.get(`${url}/countries`);\r\n        \r\n        return countries.map((country)=>country.name);\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}","import React, {useState, useEffect} from 'react' \r\nimport { fetchDailyData } from '../../api';\r\nimport {Line, Bar} from 'react-chartjs-2';\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart=({ data:{ confirmed, recovered, deaths }, country })=>{\r\n    const [dailyData, setDailyData] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        const fetchAPI = async()=>{\r\n            setDailyData(await fetchDailyData());   \r\n        }\r\n        \r\n\r\n        fetchAPI();\r\n    },[]);\r\n\r\n    const lineChart =(\r\n        dailyData.length ?\r\n        (<Line\r\n         data={{\r\n             labels: dailyData.map(({ date })=> date ),\r\n             datasets: [{\r\n                 data: dailyData.map(({ confirmed })=> confirmed ),\r\n                 label:'Infected',\r\n                 borderColor: '#3333ff',\r\n                 fill:true,\r\n             }, {\r\n                data: dailyData.map(({ deaths })=> deaths ),\r\n                label:'Deaths',\r\n                borderColor: 'red',\r\n                backgroundColor: 'rgba(255,0,0,0.5)',\r\n                fill:true,\r\n             }],\r\n         }}\r\n        /> ) : null \r\n    );\r\n\r\n    const barChart = (\r\n        confirmed\r\n        ? (\r\n            <Bar\r\n             data = {{\r\n               labels: ['Infected', 'Recovered', 'Deaths'],\r\n               datasets: [{\r\n                  label: 'People',\r\n                  backgroundColor: [\r\n                      'rgba(0,0,255,0.5)',\r\n                      'rgba(0,255,0,0.5)',\r\n                      'rgba(255,0,0,0.5)'\r\n                  ],\r\n                  data: [confirmed.value, recovered.value, deaths.value],\r\n               }]\r\n             }}\r\n             options = {{\r\n                 legend: { display: false },\r\n                 title: { display: true, text: `Current State in ${country}`}\r\n             }}\r\n            />\r\n        ): null \r\n    )\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            { country ? barChart : lineChart }\r\n        </div>\r\n    )\r\n}\r\n \r\nexport default Chart;","import React, {useState, useEffect} from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core'; \r\nimport styles from './CountryPicker.module.css';\r\nimport { fetchCountries } from '../../api';\r\n\r\nconst CountryPicker=({ handleCountryChange })=>{\r\n\r\n    const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        const fetchAPI= async()=>{\r\n            setFetchedCountries(await fetchCountries());\r\n        }\r\n        fetchAPI();\r\n\r\n    },[setFetchedCountries])\r\n\r\n\r\n    return (\r\n        <FormControl className={styles.formControl}>\r\n           <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)} > \r\n               <option value=\"\">Global</option>\r\n               {fetchedCountries.map((country, i)=><option key={i} value={country}>{country}</option>)}\r\n           </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n \r\nexport default CountryPicker;","export default __webpack_public_path__ + \"static/media/image.9e5d4fc7.png\";","import React from 'react';\r\n\r\nimport { Cards, Chart, CountryPicker } from './components';\r\nimport styles from './App.module.css';\r\nimport { fetchData } from './api';\r\nimport coronaImage from './images/image.png';\r\n\r\nclass App extends React.Component{\r\n    \r\n    state = {\r\n       data: {},\r\n       country: '',\r\n    }\r\n\r\n    async componentDidMount(){\r\n         const fetchedData = await fetchData();\r\n         this.setState({ data : fetchedData });\r\n    }\r\n\r\n    handleCountryChange= async(country)=>{\r\n       const fetchedData= await fetchData(country);\r\n\r\n       this.setState({ data : fetchedData, country: country });\r\n    }\r\n\r\n    render(){\r\n        const {data, country}= this.state;\r\n        return(\r\n            <div className={styles.container}>\r\n                <img className={styles.image} src={coronaImage} alt=\"Covid-19\" />\r\n                <Cards data={data} />\r\n                <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n                <Chart data={data} country={country}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport  ReactDOM  from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App/>,document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3CT4R\",\"image\":\"App_image__3UW6b\"};"],"sourceRoot":""}